class Draggable{#a;constructor(e){this.#a=e}load(e){let t,l,n,a={};Draggable.event(this.#a,"mousedown",e=>{t=!0,document.body.style.userSelect="none",l=e.pageX||e.clientX+window.scrollX,n=e.pageY||e.clientY+window.scrollY,a.x=l-this.#a.offsetLeft,a.y=n-this.#a.offsetTop}),Draggable.event(document,"mouseup",()=>{t=!1,document.body.style.userSelect="auto"}),Draggable.event(document,"mousemove",s=>{if(!t)return;let g=parseInt(getComputedStyle(this.#a).height),i=parseInt(getComputedStyle(this.#a).width),o=e??8;l=s.pageX||s.clientX+document.documentElement.scrollLeft,n=s.pageY||s.clientY+document.documentElement.scrollTop,l=s.pageX-a.x<o?o:s.pageX-a.x+i>document.body.clientWidth-o?document.body.clientWidth-i-o:s.pageX-a.x,n=s.pageY-a.y<o?o:s.pageY-a.y+g>window.innerHeight-o?window.innerHeight-g-o:s.pageY-a.y,Object.assign(this.#a.style,{top:`${n}px`,left:`${l}px`})}),Draggable.event(document,"mousewheel",()=>{t=!1}),/fixed|absolute/.test(getComputedStyle(this.#a).position)||(this.#a.style.position="fixed")}static event(e,t,l){document.attachEvent?e.attachEvent("on"+t,l):e.addEventListener(t,l)}}