class Draggable{#e;constructor(e){this.#e=e}load(e){let t,n,o;const l={};Draggable.event(this.#e,"mousedown",(e=>{t=!0,document.body.style.userSelect="none",n=e.pageX||e.clientX+window.scrollX,o=e.pageY||e.clientY+window.scrollY,l.x=n-this.#e.offsetLeft,l.y=o-this.#e.offsetTop})),Draggable.event(document,"mouseup",(()=>{t=!1,document.body.style.userSelect="auto"})),Draggable.event(document,"mousemove",(a=>{if(!t)return;const g=parseInt(getComputedStyle(this.#e).height),c=parseInt(getComputedStyle(this.#e).width),s=e??8;n=a.pageX||a.clientX+document.documentElement.scrollLeft,o=a.pageY||a.clientY+document.documentElement.scrollTop,n=a.pageX-l.x<s?s:a.pageX-l.x+c>document.body.clientWidth-s?document.body.clientWidth-c-s:a.pageX-l.x,o=a.pageY-l.y<s?s:a.pageY-l.y+g>window.innerHeight-s?window.innerHeight-g-s:a.pageY-l.y,Object.assign(this.#e.style,{top:`${o}px`,left:`${n}px`}),console.log(g)})),Draggable.event(document,"mousewheel",(()=>{t=!1}))}static event(e,t,n){document.attachEvent?e.attachEvent("on"+t,n):e.addEventListener(t,n)}}
